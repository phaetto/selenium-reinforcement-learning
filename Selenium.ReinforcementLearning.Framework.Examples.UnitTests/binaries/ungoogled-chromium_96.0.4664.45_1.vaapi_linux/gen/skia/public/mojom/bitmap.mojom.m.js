// skia/public/mojom/bitmap.mojom.m.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import {mojo} from '../../../mojo/public/js/bindings.js';

import {
  BigBuffer as mojoBase_mojom_BigBuffer,
  BigBufferSpec as mojoBase_mojom_BigBufferSpec
} from '../../../mojo/public/mojom/base/big_buffer.mojom.m.js';

import {
  BitmapN32ImageInfo as skia_mojom_BitmapN32ImageInfo,
  BitmapN32ImageInfoSpec as skia_mojom_BitmapN32ImageInfoSpec,
  ImageInfo as skia_mojom_ImageInfo,
  ImageInfoSpec as skia_mojom_ImageInfoSpec
} from './image_info.mojom.m.js';



/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const BitmapN32Spec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const BitmapWithArbitraryBppSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const BitmapMappedFromTrustedProcessSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };

/**
 * @const { {$:!mojo.internal.MojomType}}
 */
export const InlineBitmapSpec =
    { $: /** @type {!mojo.internal.MojomType} */ ({}) };




mojo.internal.Struct(
    BitmapN32Spec.$,
    'BitmapN32',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia_mojom_BitmapN32ImageInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pixelData', 8,
        0,
        mojoBase_mojom_BigBufferSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 32],]);



/**
 * @record
 */
export class BitmapN32 {
  constructor() {
    /** @type { !skia_mojom_BitmapN32ImageInfo } */
    this.imageInfo;
    /** @type { !mojoBase_mojom_BigBuffer } */
    this.pixelData;
  }
}



mojo.internal.Struct(
    BitmapWithArbitraryBppSpec.$,
    'BitmapWithArbitraryBpp',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia_mojom_ImageInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uNUSEDRowBytes', 8,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pixelData', 16,
        0,
        mojoBase_mojom_BigBufferSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class BitmapWithArbitraryBpp {
  constructor() {
    /** @type { !skia_mojom_ImageInfo } */
    this.imageInfo;
    /** @type { !bigint } */
    this.uNUSEDRowBytes;
    /** @type { !mojoBase_mojom_BigBuffer } */
    this.pixelData;
  }
}



mojo.internal.Struct(
    BitmapMappedFromTrustedProcessSpec.$,
    'BitmapMappedFromTrustedProcess',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia_mojom_ImageInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'uNUSEDRowBytes', 8,
        0,
        mojo.internal.Uint64,
        BigInt(0),
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pixelData', 16,
        0,
        mojoBase_mojom_BigBufferSpec.$,
        null,
        false /* nullable */,
        0),
    ],
    [[0, 40],]);



/**
 * @record
 */
export class BitmapMappedFromTrustedProcess {
  constructor() {
    /** @type { !skia_mojom_ImageInfo } */
    this.imageInfo;
    /** @type { !bigint } */
    this.uNUSEDRowBytes;
    /** @type { !mojoBase_mojom_BigBuffer } */
    this.pixelData;
  }
}



mojo.internal.Struct(
    InlineBitmapSpec.$,
    'InlineBitmap',
    [
      mojo.internal.StructField(
        'imageInfo', 0,
        0,
        skia_mojom_BitmapN32ImageInfoSpec.$,
        null,
        false /* nullable */,
        0),
      mojo.internal.StructField(
        'pixelData', 8,
        0,
        mojo.internal.Array(mojo.internal.Uint8, false),
        null,
        false /* nullable */,
        0),
    ],
    [[0, 24],]);



/**
 * @record
 */
export class InlineBitmap {
  constructor() {
    /** @type { !skia_mojom_BitmapN32ImageInfo } */
    this.imageInfo;
    /** @type { !Array<!number> } */
    this.pixelData;
  }
}

